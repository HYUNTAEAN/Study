자바의 오픈 소스 프레임워크
객체 관리 컨테이너 제공
model 2 방식 

의존성 주입 : 객체간 의존 관계 설정으로 스프링이 자동으로 해결
제어 역전 : 제어권이 프레임워크에 있음

ORM : db를 oop 언어로 변경해줌

jpa : orm을 위해 자바에서 제공하는 api / 자바 객체와 DB를 매핑 / 구현체는 하이버네이트

dispatcherServlet : 프론트 컨트롤러



동작 순서

브라우저 -> (url) 내장 서버 -> 스프링 컨테이너 컨트롤러 -> return 값 뷰 리졸버 검색 -> model의 데이터로 브라우저에 투영

MVC

뷰는 클라이언트 화면
모델 데이터
컨트롤러 요청값으로 뷰리졸버 검색

인터셉터 : 컨트롤러 직전에 호출 / 컨트롤러 단에서 예외 잡을 수 있음 / 톰캣까지 예외 안보냄 / preHandle, postHandle, afterCompletion
필터 : dispatcher servlet 이전에 작동 / 적절하지 않은 요청을 서블릿까지 도달 못하게 막음 / init으로 초기화 / doFilter가 메인 로직 / destroy 로 종료

@Transaction
ACID 를 보장시킴 ( 서비스 단에서 선언시 리턴 도달까지 유지 )

커넥션 풀

톰캣이나 HikariCP에서 관리
미리 연결체를 만들어 놓고 꺼내서 씀 ( 자원 절약 )
멀티 쓰레드는 ContextSwitching 이 많이 발생하기 때문에 비효율적
쓰레드 풀보다 많은 커넥션 풀은 당연히 놀고먹기 때문에 비효율적

